<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- SqlSession과 비슷한 역할, Spring Bean 기재하기 -->
	
	<!-- 
		* root-context.xml
		서버 구동과 동시에 web.xml파일을 거쳐서 바로 로딩되는 문서 = preloading
		=> 서버구동과 동시에 바로세팅(Bean등록)해야하는 내용들을 작성
		=> 주로 DB접속, 트랜젝션처리, 외부모듈연결 등등...
		
		SqlSessionTemplate를 최종적으로 등록 해야한다. SqlSession을 대체하는애임
		
		어찌됐든 만들려면 생성자를 호출해야하는데, 매개변수가 들어가있음(SqlSessionFactory sqlSessionFactory)
		매개변수도 등록을 해놔야함.
		
		전부 다 interface로 받는다. 메소드만 interface로 입력받고 실제로 작동되는건 Spring이 알아서 정해줌
		
		BasicDataSource -> SqlSessionFactoryBean -> SqlSessionTemplate
		순서로 등록
	-->
	
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<!-- 서버키면 객체 생성해버림 그냥 Bean 객체기때문에 setter메소드를 이용해 필드에 값을 넣어줘야함 -->
		<!-- BasicDataSource의 필드에 들어갈 값들 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="SPRING" />
		<property name="password" value="SPRING" />
		<!-- 얘를 SqlSessionFactoryBean를 생성할 때 dataSource라는 이름의 매개변수로 넘어가야함 -->
	</bean>
	<!-- 
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		dataSource.setUsername("SPRING");
		dataSource.setPassword("SPRING");
		위 코드를 대신하는게 Bean 태그임
	-->

	<!-- 2단계. MyBatisSpring에서 제공하는 SQL문을 실행하기 위한 Bean등록 -->
	<!-- Bean 이란? == 스프링이 관리하는 객체 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- MyBatis설정파일 위치를 지정해서 설정값들을 가져와야함 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 
		SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactory();
		sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
		sqlSessionFactory.setDataSource(dataSource);
	-->
	
	<!-- 3단계. SQL 구문 실행을 위한 템플릿을 등록하는 도구 등록 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- 기본생성자가 없어서 매개변수 생성자 참조 설정을 해줘야함 -->
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- 
		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
		
		property : setter injection
		constructor-arg : contructor injection
		
		xml 문서에서 bean 등록하는 방법
		
		1. bean태그 작성
		2. class 속성에 풀 클래스명 작성
		3. id속성에 사용할 id값 작성
	-->
	
	<!-- 
		Controller와 handleMapping을 위해 bean등록하..
		
		<bean class="opg.springframework.web.servlet.SimpleUrlhandlerMapping">
			<bean:property name="mapping">
				<bean:prop key="login.me">memberController</bean>
			</bean:property>
		</bean>
	-->
	
	</beans>